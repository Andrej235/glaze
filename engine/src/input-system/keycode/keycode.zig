const Platform = @import("../../utils/platform.zig").current_platform;

pub const KeyCode = enum(u16) {
    Unknown = 0,

    LeftMeta,
    RightMeta,
    Insert,
    Home,
    End,
    PageUp,
    PageDown,
    Escape,
    Minus,
    Equal,
    LeftBracket,
    RightBracket,
    Semicolon,
    Apostrophe,
    Grave,
    Backslash,
    Comma,
    Period,
    NumDot,
    NumMultiply,
    NumMinus,
    NumPlus,
    NumEnter,
    NumDivide,
    Slash,
    Enter,
    Space,
    Backspace,
    Tab,
    LeftShift,
    RightShift,
    LeftCtrl,
    RightCtrl,
    LeftAlt,
    RightAlt,
    CapsLock,
    Delete,

    Up,
    Down,
    Left,
    Right,

    A,
    B,
    C,
    D,
    E,
    F,
    G,
    H,
    I,
    J,
    K,
    L,
    M,
    N,
    O,
    P,
    Q,
    R,
    S,
    T,
    U,
    V,
    W,
    X,
    Y,
    Z,

    Num0,
    Num1,
    Num2,
    Num3,
    Num4,
    Num5,
    Num6,
    Num7,
    Num8,
    Num9,

    F1,
    F2,
    F3,
    F4,
    F5,
    F6,
    F7,
    F8,
    F9,
    F10,
    F11,
    F12,
};

const map = switch (Platform) {
    .linux => @import("linux-keycode-mapper.zig").linuxKeyCodeMapper,
    .windows => @import("windows-keycode-mapper.zig").keycodeFromInt,
    else => @compileError("Platform not supported"),
};

pub fn keycodeFromInt(num: u32) KeyCode {
    return map(num);
}
